
@{
    ViewBag.Title = "Index";
    //Layout = null;
}


<html>
<head>
    <script src="~/js/jquery.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/css/datatables.min.css" />
    @*<script type="text/javascript" src="~/js/pdfmake.min.js"></script>*@
    @*<script type="text/javascript" src="~/js/vfs_fonts.js"></script>*@
    <script type="text/javascript" src="~/js/datatable.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/css/Site.css">
    <script src="~/js/dataTables.responsive.min.js"></script>
    <script src="~/js/dataTables.buttons.min.js"></script>
    <script src="~/js/buttons.colVis.min.js"></script>
    <script src="~/js/dataTables.editor.min.js"></script>

    <style>
        .fa-trash {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container_">
        <span class="fileNameOne" name="@ViewBag.fileNameOne"></span>
        <span class="fileNameTwo" name="@ViewBag.fileNameTwo"></span>
        <br />
        Comparing Files between: <strong> @ViewBag.fileNameOne</strong> & <strong>@ViewBag.fileNameTwo</strong>
        <br />
        Total Number of Files in: <strong>pathOne: <span class="totalPathOne"></span></strong> &  <strong>pathTwo:<span class="totalPathTwo"></span></strong>
        <br />
        Comparing only: <span id="comp"></span>
        <hr />
        <table class="table table-bordered table-hover table-striped table-responsive">
            <thead>
                <tr>
                    <th>#</th>
                    <th class="all">FileOne</th>
                    <th class="all">FileTwo</th>
                    <th class="all">IsSimilar</th>
                    @*<th class="none">FileType</th>*@
                    <th class="all noExport">Options</th>
                    <th class="none">FileOneLines</th>
                    <th class="none">FileOnePath</th>
                    <th class="none">FileTwoLines</th>
                    <th class="none">FileTwoPath</th>
                </tr>
            </thead>
            <tbody id="body">
            </tbody>
        </table>
        <div class="loader table-loader text-primary" role="status" style="margin: auto">
        </div>
        <hr />
    </div>
    <script>
        var data_table = undefined;
        //function Delete(id)
        //{
        //    data_table.row("." + id).remove().draw(false);;
        //}
        function read()
        {
            $.get("../../Home/getList?fileOne=" + $(".fileNameOne").attr("name") + "&fileTwo=" + $(".fileNameTwo").attr("name"), (data) =>
            {
                var arr = data.split(":")
                $(".totalPathOne").text(arr[0])
                $(".totalPathTwo").text(arr[1])
            })
        }
        function readComp()
        {
            $.get("../../Home/getCheckList", (data) =>
            {
                $("#comp").text(data)
            })
        }


        
        function DeleteRows() {
            data_table.clear().draw()
        }
        //$(".delete-btn").on("click", function (d) {
        //    var tr = $(d).parent("tr")
        //    console.log(tr)
        //    data_table.row(tr).remove().draw(false);;

        //})
        function load_data_to_table(data) {
            DeleteRows()
            let count = 1
            data.forEach(function (i) {
                let txt = i["isSame"] == true ? "<i class='fa fa-check text-success'><span style='display:none'>Yes</span>" : "<i class='fa fa-times text-danger'><span style='display:none'>No</span>"
                let fileOnePath = "Not Found"
                let fileTwoPath = "Not Found"
                let fileOneLines = 0
                let fileTwoLines = 0
                try {
                    fileOneLines = i["lines"]["fileOne"]
                    fileOnePath = i["filePath"]["fileOne"]
                }
                catch { }
                try {
                    fileTwoLines = i["lines"]["fileTwo"]
                    fileTwoPath = i["filePath"]["fileTwo"]
                }
                catch { }
                let tdOne = count
                let tdTwo = i["fileName"]["fileOne"]
                let tdThree = i["fileName"]["fileTwo"]
                let tdFour = txt
                let tdFive = "<a target='_blank' href='../../Home/readContents?pathOne=" + i["filePath"]["fileOne"] + "&pathTwo=" + i["filePath"]["fileTwo"] + "'> <i class='fa fa-eye'></i></a>"
                let tdSix = fileOneLines
                let tdSeven = fileOnePath
                let tdEight = fileTwoLines
                let tdNine = fileTwoPath
                let tr = data_table.row.add([tdOne, tdTwo, tdThree, tdFour, tdFive, tdSix, tdSeven, tdEight, tdNine]).draw(false);
                $(tr).addClass(count);
                $(tr).attr("class",count)
                count++
            })
        }



        function reloadData()
        {
            $(".table").hide()
            $(".table-loader").show()

            $.ajax(
                {
                    type: "POST",
                    url: "../../Home/read",
                    data:
                    {
                        folderOnePath: $(".fileNameOne").attr("name"), folderTwoPath: $(".fileNameTwo").attr("name")
                    },
                    success: function (data)
                    {
                        load_data_to_table(data)
                        $(".table-loader").hide()

                        $(".table").show()
                    }
                })
            

        }
        

        function loadData() {
            $.ajax({
                type: "POST",
                url: "../../Home/read",
                data:
                {
                    folderOnePath: $(".fileNameOne").attr("name"), folderTwoPath: $(".fileNameTwo").attr("name")
                },
                success: function (data) {
                   
                    $(".table-loader").hide()
                    data_table = $('.table').DataTable({
                        responsive: true, dom: 'Bfrtip',
                        ////rowReorder: true,
                        //select: {
                        //    style: 'multi'
                        //},
                        dom: 'Bfrtip',
                        buttons: [
                            {
                                extend: 'excelHtml5',
                                exportOptions:
                                {
                                    columns: [0, 1, 2, 3, 5, 6, 7, 8]
                                }
                            },
                            //'excelHtml5',
                            'csvHtml5',
                            'colvis',
                            {
                                text: '<i class="fa fa-refresh"></i>',
                                action: function (e, dt, node, config) {
                                    reloadData()
                                }
                            }
                        ]
                    });
                    load_data_to_table(data)
                    readComp()
                    read()
                }
            })
        }
        $(document).ready(function ()
        {
            loadData()
        })
    </script>
</body>
</html>
